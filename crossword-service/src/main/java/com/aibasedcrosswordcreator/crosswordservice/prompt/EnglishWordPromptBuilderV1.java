package com.aibasedcrosswordcreator.crosswordservice.prompt;

import com.aibasedcrosswordcreator.crosswordservice.dto.GenerateWordsDetailsDTO;
import com.aibasedcrosswordcreator.crosswordservice.dto.SaveWordsAndGenerateCluesRequest;
import org.springframework.stereotype.Component;

@Component
public class EnglishWordPromptBuilderV1 implements WordPromptBuilder {
    @Override
    public String generateWords(GenerateWordsDetailsDTO dto) {
        return String.format(
                "Provide %d word(s) (or as many as you can) in %s language of maximum length of %d where theme is %s. " +
                "Word(s) must be separated with comma. Your answer must contains only word(s) and be in a single line.",
                dto.quantity(), dto.language(), dto.maxLength(), dto.theme()
        );
    }

    @Override
    public String generateClues(SaveWordsAndGenerateCluesRequest dto) {
        return String.format(
                "For each word in the given word list generate a short description. " +
                "All descriptions for all words have to be separated with a '/-=-/' string. Language of crossword, " +
                "words and clues that you have to generate is %s and theme is %s. " +
                "Your answer must contains only word(s) and be in a single line. " +
                "Return only descriptions without given words from the word list. " +
                "Don't repeat words from the list, clues only. " +
                "Clues must by in the same order as given words. " +
                "Example output for words [India, Java], output: 'Most populated country in asia /-=-/ Programming language'. " +
                "Number of descriptions generated by you must be the same as list of words length. Here's a list: ",
                dto.language(),
                dto.theme()
        ) + dto.words();
    }

    @Override
    public String generateWordsWithClues(GenerateWordsDetailsDTO dto) {
        return String.format(
                "For theme: %s and language: %s generate %d word(s) of maximum length %d and their description." +
                "Descriptions must fit to given theme and language. Use '/-=-/' as separator between pairs of words and clues." +
                "Use '/#=#/' separator between word and clue. Your response should looks like this: word1/#=#/clue1/-=-/word2/#=#/clue2",
                dto.theme(),
                dto.language(),
                dto.quantity(),
                dto.maxLength()
        );
    }

    @Override
    public WordPromptParser getParser() {
        return new SeparatorBasedWordPromptParser();
    }
}
