package com.aibasedcrosswordcreator.crosswordservice.util;

import com.aibasedcrosswordcreator.crosswordservice.model.Model;
import com.aibasedcrosswordcreator.crosswordservice.model.Provider;
import com.aibasedcrosswordcreator.crosswordservice.model.ProviderModel;
import com.aibasedcrosswordcreator.crosswordservice.repository.ModelRepository;
import com.aibasedcrosswordcreator.crosswordservice.repository.ProviderModelRepository;
import com.aibasedcrosswordcreator.crosswordservice.repository.ProviderRepository;
import jakarta.validation.constraints.NotNull;

public class ProviderModelUtil {
    public static ProviderModel findProviderModel(
            @NotNull String providerName,
            @NotNull String modelName,
            @NotNull ProviderRepository providerRepository,
            @NotNull ModelRepository modelRepository,
            @NotNull ProviderModelRepository providerModelRepository
    ) {
        if (providerName == null && modelName == null) {
            return null;
        }
        Provider provider = providerRepository.findByName(providerName).orElseGet(() -> {
            Provider newProvider = Provider.builder().name(providerName).description(providerName + "'s autogenerated description").build();
            return providerRepository.save(newProvider);
        });
        Model model = modelRepository.findByName(modelName).orElseGet(() -> {
            Model newModel = Model.builder().name(modelName).description(modelName + "'s autogenerated description").build();
            return modelRepository.save(newModel);
        });
        return providerModelRepository.findByProviderAndModel(provider, model).orElseGet(() -> {
            ProviderModel newProviderModel = ProviderModel.builder().provider(provider).model(model).build();
            return providerModelRepository.save(newProviderModel);
        });
    }
}
